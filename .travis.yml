# request for Ubuntu 14.04 Trusty VM
sudo: true
dist: trusty

# No language, so that we can set CXX and CC env vars as required ourselves
# language: cpp

matrix:
    include:
        # 1: Linux Clang Builds
        - os: linux
          compiler: clang
          addons: &clang38
            apt:
                sources:
                    - llvm-toolchain-precise-3.8
                    - ubuntu-toolchain-r-test
                packages:
                    - clang-3.8
                    - g++-5 # Need newer version of libstdc++
          env:
              - CC=clang-3.8
              - CXX=clang++-3.8
              - BUILD_TYPE='Release'

        - os: linux
          compiler: clang
          addons: *clang38
          env:
              - CC=clang-3.8
              - CXX=clang++-3.8
              - BUILD_TYPE='Debug'

        # 2: Linux GCC Builds
        - os: linux
          compiler: gcc
          addons: &gcc5
            apt:
                sources:
                    - ubuntu-toolchain-r-test
                packages:
                    - g++-5
          env:
              - CC=gcc-5
              - CXX=g++-5
              - BUILD_TYPE='Release'

        - os: linux
          compiler: gcc
          addons: *gcc5
          env:
              - CC=gcc-5
              - CXX=g++-5
              - BUILD_TYPE='Debug'

        - os: linux
          compiler: gcc
          addons: &gcc6
            apt:
                sources:
                    - ubuntu-toolchain-r-test
                packages:
                    - g++-6
          env:
              - CC=gcc-6
              - CXX=g++-6
              - BUILD_TYPE='Release'

        - os: linux
          compiler: gcc
          addons: *gcc6
          env:
              - CC=gcc-6
              - CXX=g++-6
              - BUILD_TYPE='Debug'

        # 3: OSX Clang Builds
        - os: osx
          compiler: clang
          osx_image: xcode8
          env:
              - CC=clang
              - CXX=clang++
              - BUILD_TYPE='Release'

        - os: osx
          compiler: clang
          osx_image: xcode8
          env:
              - CC=clang
              - CXX=clang++
              - BUILD_TYPE='Debug'

        # Coverals documentation on setup at https://github.com/eddyxu/cpp-coveralls
        # This build is just for coveralls
        - os: linux
          compiler: gcc
          addons:
            apt:
                sources:
                    - ubuntu-toolchain-r-test
                packages:
                    - g++-6
          env:
              - CC=gcc-6
              - CXX=g++-6
              - CXXFLAGS=--coverage
              - BUILD_TYPE='Debug'
          before_install:
              - pip install --user cpp-coveralls
          after_success:
              - coveralls --root .. -e tests -e build/thirdparty -e build/dependencies -E ".*feature_tests.*" -E ".*CompilerId.*" --gcov-options '\-lp'

before_script:
    - mkdir build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} ..

script:
    - cmake --build .
    - ctest --output-on-failure
